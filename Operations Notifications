<script>
document.addEventListener('DOMContentLoaded', function () {
  function triggerPopupWhenReady() {
		if (
			typeof elementorProFrontend !== 'undefined' && 
			elementorProFrontend.modules && 
			elementorProFrontend.modules.popup
		) {
			if (document.querySelector('.has-category-operations-notifications')) {
          elementorProFrontend.modules.popup.showPopup({ id: 12961 });		
			}
		} else {
			setTimeout(triggerPopupWhenReady, 100); 
		}
	}
	
	triggerPopupWhenReady(); 
}); 

</script>

_____________________
<script>
document.addEventListener('DOMContentLoaded', function () {
  const popupId = 12961;
  const categoryClass = 'has-category-operations-notifications';
  const wrapper = document.querySelector('.' + categoryClass);
  if (!wrapper) return;

  const latestPostDate = wrapper.getAttribute('data-latest-post');
  if (!latestPostDate) return;

  const lastSeenDate = localStorage.getItem('seen_operations_notification');

  if (latestPostDate !== lastSeenDate) {
    if (typeof elementorProFrontend !== 'undefined' && elementorProFrontend.modules.popup) {
      elementorProFrontend.modules.popup.showPopup({ id: popupId });

      document.addEventListener('click', function (e) {
        if (e.target.classList.contains('dismiss-popup-btn')) {
          localStorage.setItem('seen_operations_notification', latestPostDate);
          elementorProFrontend.modules.popup.closePopup({ id: popupId });
        }
      });
    }
  }
});
</script>
_____________________
<script>
document.addEventListener('DOMContentLoaded', function () {
  const wrapper = document.querySelector('.has-category-operations-notifications');
  console.log('Wrapper:', wrapper);

  if (wrapper) {
    const latest = wrapper.getAttribute('data-latest-post');
    console.log('Latest Post Date:', latest);
  } else {
    console.log('No wrapper found.');
  }
});
</script>
______________________
<script>
document.addEventListener('DOMContentLoaded', function () {
  setTimeout(function () {
    const wrapper = document.querySelector('.has-category-operations-notifications');
    console.log('Wrapper:', wrapper);

    if (wrapper) {
      const latest = wrapper.getAttribute('data-latest-post');
      console.log('Latest Post Date:', latest);

      const today = new Date();
      const postDate = new Date(latest);
      const timeDiff = today - postDate;
      const daysDiff = timeDiff / (1000 * 60 * 60 * 24);

      const storageKey = 'popupLastSeen';
      const lastSeenDate = localStorage.getItem(storageKey);

      console.log('Days Difference:', daysDiff);
      console.log('Last Seen:', lastSeenDate);

      if (
        daysDiff <= 5 &&
        latest !== lastSeenDate &&
        typeof elementorProFrontend !== 'undefined' &&
        elementorProFrontend.modules &&
        elementorProFrontend.modules.popup
      ) {
        console.log('Triggering popup!');
        elementorProFrontend.modules.popup.showPopup({ id: 12961 });

        /*
	document.addEventListener('click', function (e) {
          const closeBtn = e.target.closest('.eicon-close, .dialog-close, .elementor-popup-modal .elementor-button');
          if (closeBtn) {
            localStorage.setItem(storageKey, latest);
            console.log('Popup dismissed, stored date:', latest);
          }
        });
      	*/
        const popupObserver = new MutationObserver(function () {
          const dismissButton = document.querySelector('.elementor-popup-modal .elementor-button');
          if (dismissButton) {
            dismissButton.addEventListener('click', function () {
              localStorage.setItem(storageKey, latest);

              fetch(ajaxurl, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: 'action=record_popup_dismissal&post_date=' + encodeURIComponent(latest),
              })
              .then(response => response.text())
              .then(data => {
                console.log('Dismissal recorded:', data);
              });
            });

            popupObserver.disconnect();
          }
        });

        popupObserver.observe(document.body, { childList: true, subtree: true });
	} else {
		console.log('Popup not shown: either already seen or too old.');
      	}



    } else {
      console.log('No wrapper found after timeout.');
    }
	
  }, 1500);
});
</script>

